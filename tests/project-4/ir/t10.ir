global_string @str_31_36   
global_string @str_28_11 Transpose of the matrix:
global_string @str_16_28   
global_string @str_13_11 Matrix:
define @main
  alloc_int_100_10 %a
  alloc_int_100_10 %transpose
  alloc_int %r
  alloc_int %c
  alloc_int %i
  alloc_int %j
  literal_int 5 %2
  store_int %2 %r
  literal_int 4 %3
  store_int %3 %c
  literal_int 0 %4
  store_int %4 %i
5:
  load_int %i %8
  load_int %r %9
  lt_int %8 %9 %10
  cbranch %10 %6 %7
6:
  literal_int 0 %11
  store_int %11 %j
12:
  load_int %j %15
  load_int %c %16
  lt_int %15 %16 %17
  cbranch %17 %13 %14
13:
  load_int %i %18
  literal_int 10 %19
  mul_int %19 %18 %20
  load_int %j %21
  add_int %20 %21 %22
  elem_int %a %22 %23
  literal_int 10 %24
  load_int %i %25
  literal_int 2 %26
  mul_int %25 %26 %27
  add_int %24 %27 %28
  load_int %j %29
  add_int %28 %29 %30
  store_int_* %30 %23
  load_int %j %31
  literal_int 1 %32
  add_int %31 %32 %33
  store_int %33 %j
  jump %12
14:
  load_int %i %34
  literal_int 1 %35
  add_int %34 %35 %36
  store_int %36 %i
  jump %5
7:
  print_string @str_13_11
print_void:
  literal_int 0 %37
  store_int %37 %i
38:
  load_int %i %41
  load_int %r %42
  lt_int %41 %42 %43
  cbranch %43 %39 %40
39:
  literal_int 0 %44
  store_int %44 %j
45:
  load_int %j %48
  load_int %c %49
  lt_int %48 %49 %50
  cbranch %50 %46 %47
46:
  load_int %i %51
  literal_int 10 %52
  mul_int %52 %51 %53
  load_int %j %54
  add_int %53 %54 %55
  elem_int %a %55 %56
  load_int_* %56 %57
  print_int %57
  print_string @str_16_28
  load_int %j %60
  load_int %c %61
  literal_int 1 %62
  sub_int %61 %62 %63
  eq_int %60 %63 %64
  cbranch %64 %58 %59
58:
print_void:
59:
  load_int %j %65
  literal_int 1 %66
  add_int %65 %66 %67
  store_int %67 %j
  jump %45
47:
  load_int %i %68
  literal_int 1 %69
  add_int %68 %69 %70
  store_int %70 %i
  jump %38
40:
  literal_int 0 %71
  store_int %71 %i
72:
  load_int %i %75
  load_int %r %76
  lt_int %75 %76 %77
  cbranch %77 %73 %74
73:
  literal_int 0 %78
  store_int %78 %j
79:
  load_int %j %82
  load_int %c %83
  lt_int %82 %83 %84
  cbranch %84 %80 %81
80:
  load_int %j %85
  literal_int 10 %86
  mul_int %86 %85 %87
  load_int %i %88
  add_int %87 %88 %89
  elem_int %transpose %89 %90
  load_int %i %91
  literal_int 10 %92
  mul_int %92 %91 %93
  load_int %j %94
  add_int %93 %94 %95
  elem_int %a %95 %96
  load_int_* %96 %97
  store_int_* %97 %90
  load_int %j %98
  literal_int 1 %99
  add_int %98 %99 %100
  store_int %100 %j
  jump %79
81:
  load_int %i %101
  literal_int 1 %102
  add_int %101 %102 %103
  store_int %103 %i
  jump %72
74:
  print_string @str_28_11
print_void:
  literal_int 0 %104
  store_int %104 %i
105:
  load_int %i %108
  load_int %c %109
  lt_int %108 %109 %110
  cbranch %110 %106 %107
106:
  literal_int 0 %111
  store_int %111 %j
112:
  load_int %j %115
  load_int %r %116
  lt_int %115 %116 %117
  cbranch %117 %113 %114
113:
  load_int %i %118
  literal_int 10 %119
  mul_int %119 %118 %120
  load_int %j %121
  add_int %120 %121 %122
  elem_int %transpose %122 %123
  load_int_* %123 %124
  print_int %124
  print_string @str_31_36
  load_int %j %127
  load_int %r %128
  literal_int 1 %129
  sub_int %128 %129 %130
  eq_int %127 %130 %131
  cbranch %131 %125 %126
125:
print_void:
126:
  load_int %j %132
  literal_int 1 %133
  add_int %132 %133 %134
  store_int %134 %j
  jump %112
114:
  load_int %i %135
  literal_int 1 %136
  add_int %135 %136 %137
  store_int %137 %i
  jump %105
107:
  literal_int 0 %138
  store_int %138 %0
  jump %1
1:
  load_int %0 %139
  return_int %139
