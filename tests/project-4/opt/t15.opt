global_string @assert_message_8_5 assertion_fail on 8:5
global_int_6_2 @m [[1, 2], [3, 4], [5, 6]]
define @main
  alloc_int %sum
  literal_int 0 %sum
  alloc_int %i
  literal_int 0 %i
4:
  load_int %i %7
  literal_int 3 %8
  lt_int %7 %8 %9
  cbranch %9 %5 %6
5:
  load_int %i %10
  literal_int 2 %11
  mul_int %11 %10 %12
  literal_int 0 %13
  add_int %12 %13 %14
  elem_int @m %14 %15
  load_int_* %15 %16
  load_int %i %17
  literal_int 2 %18
  mul_int %18 %17 %19
  literal_int 1 %20
  add_int %19 %20 %21
  elem_int @m %21 %22
  load_int_* %22 %23
  add_int %16 %23 %24
  add_int %sum %24 %25
  store_int %25 %sum
  load_int %i %26
  literal_int 1 %27
  add_int %26 %27 %28
  store_int %28 %i
  jump %4
6:
  load_int %sum %29
  literal_int 21 %30
  eq_int %29 %30 %31
  cbranch %31 %32 %33
32:
  literal_int 0 %0
1:
  load_int %0 %36
  return_int %36
33:
  print_string @assert_message_8_5
  jump %1
